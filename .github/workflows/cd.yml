name: CD
on:
  workflow_run:
    workflows: [CI]
    branches: [main]
    types: [completed]
jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          workflow_conclusion: success
          name: build
          path: .
          
      - name: Add SSH key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
          
      - name: Deploy
        env:
          DEPLOY_PATH: /home/${{ secrets.USERNAME }}/Server
        run: |
          # 디렉토리 준비
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "mkdir -p $DEPLOY_PATH"
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "rm -rf $DEPLOY_PATH/*"
          
          # 파일 전송
          echo "Copying files to server..."
          scp -r ./* ${{ secrets.USERNAME }}@${{ secrets.HOST }}:$DEPLOY_PATH/
          
          # npm install 실행
          echo "Installing dependencies..."
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "cd $DEPLOY_PATH && npm install > npm-install.log 2>&1"
          
          # 권한 설정
          echo "Setting permissions..."
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "cd $DEPLOY_PATH && chmod -R 755 ."
          
          # Prisma 생성
          echo "Generating Prisma client..."
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "cd $DEPLOY_PATH && npx prisma generate > prisma-generate.log 2>&1"
          
          # PM2 재시작
          echo "Starting PM2..."
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "cd $DEPLOY_PATH && pm2 restart kanban-backend > pm2-restart.log 2>&1 || pm2 start npm --name 'kanban-backend' -- start > pm2-start.log 2>&1"